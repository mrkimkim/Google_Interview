#-*- coding: utf-8 -*-

# 구글 면접 대비 5 - Design Pattern

"""
기본 출처 : https://www.geeksforgeeks.org/design-patterns-set-2-factory-method/
여기에서는 팩토리 패턴에 대한 정리를 실습 파일과 함께 살펴본다

팩토리 디자인이란 오브젝트 생성의 핵심 원리 중 하나로, 클라이언트에서 라이브
러리의 오브젝트를 상속과 같은 과정을 거치지 않고 쉽게 생성할 수 있도록 하는
패턴이다. 예시로는 Android OS의 View 생성과도 같다

"탈 것"이라는 클래스가 "이륜", "사륜"의 두 개의 클래스를 생성해 사용자에게
넘겨줄 수 있는데, 여기서 "삼륜" 클래스가 추가되었다고 하자.

이 때 클라이언트 사이드에서 호출 타입에 따라 "이륜", "삼륜", "사륜"을 각각
다르게 얻는 코드를 넣는다고 한다면 새로운 탈 것이 추가될 때마다 사용자는 자
신의 코드를 새롭게 컴파일해야하는 문제가 생긴다.

이 문제는 "탈 것" 클래스의 생성자에서 타입을 넘겨 받아 타입에 따라 다르게
탈 것을 생성함으로써 해결할 수 있다. 이 경우 사용자는 새로운 라이브러리를
원래 자신의 코드를 새로 컴파일할 필요없이 그대로 사용할 수 있다.
"""

